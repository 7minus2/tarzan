#!/usr/bin/env python

import sys
import tarfp


class FileWithTarAttrs:
    def __init__(self, fp):
        self.fp = fp
        self.read = fp.read
        self.pax_headers = {}
        self.encoding = sys.getfilesystemencoding()
        self.errors = None
input_file = FileWithTarAttrs(sys.stdin)
output_file = sys.stdout

while True:
    try:
        ti = tarfp.TarInfo().fromfileobj(input_file)
    except tarfp.EOFHeaderError:
        break

    print ti
    if ti.size > 0:
        input_file.read(ti.size)

        block_leftover = ti.size % tarfp.BLOCKSIZE
        if block_leftover != 0:
            input_file.read(tarfp.BLOCKSIZE - block_leftover)

#while True:
#   s = sys.stdin.read(tarfile.BLOCKSIZE)
#   obj = tarfile.TarInfo().frombuf(s)
#   print obj
#   print obj.path, obj.size
#   sys.stdin.read(obj.size / tarfile.BLOCKSIZE)

#import dtar
#
#os.system('rm -rf /tmp/dtartest')
#dt = dtar.Dtar('/tmp/dtartest')
#dt.create()
#idx = dt.index('Testing')
#f = dtar.DtarFile()
#f.from_file('/etc/services')
#print repr(f.format_header())
#print len(f.format_header())
